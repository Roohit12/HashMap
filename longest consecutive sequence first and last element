import java.util.Map;

import com.sun.accessibility.internal.resources.accessibility;

import java.util.HashMap;
import java.util.ArrayList;

public class Solution {
	public static ArrayList<Integer> longestConsecutiveIncreasingSequence(int[] arr) {
		/* Your class should be named Solution
		 * Don't write main().
		 * Don't read input, it is passed as function argument.
		 * Return output and don't print it.
	 	 * Taking input and printing output is handled automatically.
		*/
		
		HashMap<Integer,Boolean>map=new HashMap<>();

           for(int val:arr){
			   map.put(val, true);
           }

		   for(int val:arr){
			   if(map.containsKey(val-1)){
				   map.put(val, false);
			   }
		   }
		   int msp=0;
		   int ml=0;
		   ArrayList<Integer>list=new ArrayList<>();
		   for(int val:arr){
			   if(map.get(val)==true){
			   int tl=1;
			   int tsp=val;
			   while(map.containsKey(tsp+tl))
			   {
				   
              tl++;
			   }
			   
			   if(tl>ml){
				   ml=tl;
				   msp=tsp;
			   }
			   }
		   }
       //the below looop is added to print only first and last element of the sequence 
		      for(int i=0;i<ml;i++){
				   list.add(msp+i);
			   }
			   ArrayList<Integer>ans= new ArrayList<>();
			   ans.add(list.get(0));
			   ans.add(list.get(list.size()-1));
			   return ans;
    }
}
